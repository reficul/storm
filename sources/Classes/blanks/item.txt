<?php

#header#

namespace #namespace#;

if( !defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
    header( ( isset( $_SERVER[ 'SERVER_PROTOCOL' ] ) ? $_SERVER[ 'SERVER_PROTOCOL' ] :
            'HTTP/1.0' ) . ' 403 Forbidden' );
    exit;
}

class _#classname# extends \IPS\Content\Item #implements#
{
    /**
     * @brief    [ActiveRecord] Multiton Store
     */
    protected static $multitons;

    /**
     * @brief    [ActiveRecord] ID Database Column
     */
    public static $databaseColumnId = 'id';

    /**
     * @brief   Application
     */
    public static $application = '#applications#';

    /**
     * @brief   Module
     */
    public static $module = '';

    /**
     * @brief    [ActiveRecord] Database table
     */
    public static $databaseTable = '#database#';

    /**
     * @brief    [ActiveRecord] Database Prefix
     */
    public static $databasePrefix = '#prefix#';

    /**
     * @brief   [Content\Comment]   Database Column Map
     */
    public static $databaseColumnMap =array();

    /**
     * @brief   Title
     */
    public static $title = '#classname#';

    /**
     * @brief   Node Class
     */
    public static $containerNodeClass = '#nodeItemClass#';

    /**
     * @brief   [Content\Item]	Comment Class
     */
    public static $commentClass = null;

    /**
     * @brief   [ActiveRecord] Database ID Fields
     * @note    If using this, declare a static $multitonMap = array(); in the child class to prevent duplicate loading queries
     */
    protected static $databaseIdFields = [ '#prefix#id' ];

    /**
     * @brief   Bitwise keys
     */
    protected static $bitOptions = [];

    /**
     * @brief   [Content]	Key for hide reasons
     */
    public static $hideLogKey = null;

    /**
     * @brief   [Content\Comment]	Language prefix for forms
     */
    public static $formLangPrefix = '';

    /**
     * @brief   Icon
     */
    public static $icon = '';

    /**
     * @brief   URL Base
     */
    public static $urlBase = '';

    /**
     * @brief   URL Base
     */
    public static $urlTemplate = '';

    /**
     * @brief   SEO Title Column
     */
    public static $seoTitleColumn = null;

     /**
      * Get URL
      *
      * @param  string|NULL $action Action
      * @return \IPS\Http\Url
     */
    public function url( $action = null )
    {
        return \IPS\Http\Url::internal( static::$urlBase . $this->id, 'front', static::$urlTemplate );
    }
}